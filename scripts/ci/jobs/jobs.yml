- scm:
    name: skydive-github
    scm:
      - git:
          url: https://github.com/skydive-project/skydive
          browser: githubweb
          browser-url: http://github.com/skydive-project/skydive
          timeout: 20
          basedir: src/github.com/skydive-project/skydive
          per-build-tag: false
          skip-tag: true
          refspec: +refs/pull/*:refs/remotes/origin/pr/*
          branches:
            - "${ghprbActualCommit}"

- publisher:
    name: publish-cobertura
    publishers:
      - cobertura:
          report-file: "cover.out.xml"
          targets:
            - packages:
                healthy: 7000000
                unhealthy: 5000000
                failing: 3000000
            - files:
                healthy: 7000000
                unhealthy: 5000000
                failing: 3000000
            - classes:
                healthy: 7000000
                unhealthy: 5000000
                failing: 3000000
            - method:
                healthy: 7000000
                unhealthy: 5000000
                failing: 3000000

- wrapper:
    name: openstack-credentials
    wrappers:
      - credentials-binding:
          - text:
              credential-id: openstack-username
              variable: OS_USERNAME
          - text:
              credential-id: openstack-password
              variable: OS_PASSWORD
          - text:
              credential-id: openstack-tenant-name
              variable: OS_TENANT_NAME
          - text:
              credential-id: openstack-auth-url
              variable: OS_AUTH_URL
          - text:
              credential-id: openstack-region-name
              variable: OS_REGION_NAME
          - text:
              credential-id: openstack-public-network
              variable: OS_PUBLIC_IP_POOL
          - text:
              credential-id: openstack-centos-image
              variable: OS_CENTOS_IMAGE
          - text:
              credential-id: openstack-fedora-image
              variable: OS_FEDORA_IMAGE
          - text:
              credential-id: openstack-large-flavor
              variable: OS_LARGE_FLAVOR

- wrapper:
    name: github-credentials
    wrappers:
      - credentials-binding:
          - text:
              credential-id: github
              variable: GITHUB_TOKEN
          - text:
              credential-id: github-username
              variable: GITHUB_USERNAME

- wrapper:
    name: docker-credentials
    wrappers:
      - credentials-binding:
          - text:
              credential-id: docker-password
              variable: DOCKER_PASSWORD

- wrapper:
    name: copr-credentials
    wrappers:
      - credentials-binding:
          - text:
              credential-id: copr-login
              variable: COPR_LOGIN
          - text:
              credential-id: copr-token
              variable: COPR_TOKEN

- wrapper:
    name: coverage-credentials
    wrappers:
      - credentials-binding:
          - text:
              credential-id: codecov-token
              variable: CODECOV_TOKEN
          - text:
              credential-id: coveralls-token
              variable: COVERALLS_TOKEN

- defaults:
    name: skydive
    project-type: freestyle
    wrappers:
      - ansicolor:
          colormap: gnome-terminal
      - timeout:
          timeout: 60
          fail: true
          type: absolute
      - timestamps
    scm:
      - skydive-github
    node: slaves

- job:
    name: skydive-go-fmt
    defaults: skydive
    concurrent: true
    properties:
      - github:
          url: https://github.com/skydive-project/skydive
    scm:
      - skydive-github
    triggers:
      - github-pull-request:
          org-list:
            - skydive-project
          trigger-phrase: '.*(re)?run (tests|(skydive-)?go-fmt).*'
          github-hooks: true
          allow-whitelist-orgs-as-admins: true
          cancel-builds-on-update: true
          status-context: skydive-go-fmt
          black-list-labels:
            - WIP
    builders:
      - shell: cd src/github.com/skydive-project/skydive && scripts/ci/run-go-fmt.sh
    wrappers:
      - github-pull-request:
          status-url: http://ci-logs.skydive.network/skydive-go-fmt/builds/${BUILD_NUMBER}/log.html
          status-context: skydive-go-fmt
    publishers:
      - publish-cobertura
      - chuck-norris

- job:
    name: skydive-unit-tests
    defaults: skydive
    concurrent: true
    properties:
      - github:
          url: https://github.com/skydive-project/skydive
    scm:
      - skydive-github
    triggers:
      - github-pull-request:
          org-list:
            - skydive-project
          trigger-phrase: '.*(re)?run (tests|(skydive-)?unit-tests).*'
          github-hooks: true
          allow-whitelist-orgs-as-admins: true
          cancel-builds-on-update: true
          status-context: skydive-unit-tests
          black-list-labels:
            - WIP
    builders:
      - shell: |
          cd src/github.com/skydive-project/skydive
          scripts/ci/run-unit-tests.sh
    wrappers:
      - github-pull-request:
          status-url: http://ci-logs.skydive.network/skydive-unit-tests/builds/${BUILD_NUMBER}/log.html
          status-context: skydive-unit-tests
    publishers:
      - junit:
          results: tests.xml
      - publish-cobertura
      - chuck-norris

- job:
    name: skydive-compile-tests
    defaults: skydive
    concurrent: true
    properties:
      - github:
          url: https://github.com/skydive-project/skydive
    scm:
      - skydive-github
    triggers:
      - github-pull-request:
          org-list:
            - skydive-project
          trigger-phrase: '.*(re)?run (tests|(skydive-)?compile-dpdk).*'
          github-hooks: true
          allow-whitelist-orgs-as-admins: true
          cancel-builds-on-update: true
          status-context: skydive-compile-tests
          black-list-labels:
            - WIP
    builders:
      - shell: |
          cd src/github.com/skydive-project/skydive
          scripts/ci/run-compile-tests.sh
    wrappers:
      - github-pull-request:
          status-url: http://ci-logs.skydive.network/skydive-compile-tests/builds/${BUILD_NUMBER}/log.html
          status-context: skydive-compile-tests
    publishers:
      - chuck-norris

- job-template:
    name: '{name}-functional-tests-backend-{backend}'
    defaults: skydive
    concurrent: true
    properties:
      - github:
          url: https://github.com/skydive-project/skydive
    scm:
      - skydive-github
    triggers:
      - github-pull-request:
          org-list:
            - skydive-project
          trigger-phrase: '.*(re)?run (tests|(skydive-)?functional-tests-backend-{backend}).*'
          github-hooks: true
          allow-whitelist-orgs-as-admins: true
          cancel-builds-on-update: true
          status-context: '{name}-functional-tests-backend-{backend}'
          black-list-labels:
            - WIP
    builders:
      - shell: |
          #!/bin/bash
          set -v
          cd src/github.com/skydive-project/skydive
          [ -d /tmp/netcleanup ] || sudo scripts/ci/cleanup.sh init
          sudo scripts/ci/cleanup.sh snapshot
          sudo scripts/ci/cleanup.sh cleanup
          BACKEND={backend} scripts/ci/run-functional-tests.sh
          retcode=$?
          # scripts/ci/coverage.sh
          cd -
          if [ -e src/github.com/skydive-project/skydive/cover.out.xml ]
          then
            mv src/github.com/skydive-project/skydive/cover.out.xml .
          fi
          exit $retcode
    wrappers:
      - github-pull-request:
          status-url: 'http://ci-logs.skydive.network/{name}-functional-tests-backend-{backend}/builds/${{BUILD_NUMBER}}/log.html'
          status-context: '{name}-functional-tests-backend-{backend}'
    publishers:
      - junit:
          results: tests.xml
      - chuck-norris

- project:
    name: skydive
    backend:
      - orientdb
      - elasticsearch
    jobs:
      - '{name}-functional-tests-backend-{backend}'

- job:
    name: skydive-scale-tests
    defaults: skydive
    concurrent: true
    properties:
      - github:
          url: https://github.com/skydive-project/skydive
    triggers:
      - github-pull-request:
          org-list:
            - skydive-project
          trigger-phrase: '.*(re)?run (tests|(skydive-)?scale-tests).*'
          github-hooks: true
          allow-whitelist-orgs-as-admins: true
          cancel-builds-on-update: true
          status-context: skydive-scale-tests
          black-list-labels:
            - WIP
    builders:
      - shell: |
          #!/bin/bash
          set -v
          cd src/github.com/skydive-project/skydive
          [ -d /tmp/netcleanup ] || sudo scripts/ci/cleanup.sh init
          sudo scripts/ci/cleanup.sh snapshot
          sudo scripts/ci/cleanup.sh cleanup
          SHELL=dumb scripts/ci/run-scale.sh
          sudo scripts/ci/cleanup.sh snapshot
          sudo scripts/ci/cleanup.sh cleanup
          SHELL=dumb FLOW_PROTOCOL=udp scripts/ci/run-scale.sh
    wrappers:
      - github-pull-request:
          status-url: http://ci-logs.skydive.network/skydive-scale-tests/builds/${BUILD_NUMBER}/log.html
          status-context: skydive-scale-tests
    publishers:
      - chuck-norris

- job:
    name: skydive-selenium-tests
    defaults: skydive
    concurrent: true
    properties:
      - github:
          url: https://github.com/skydive-project/skydive
    triggers:
      - github-pull-request:
          org-list:
            - skydive-project
          trigger-phrase: '.*(re)?run (tests|(skydive-)?selenium-tests).*'
          github-hooks: true
          allow-whitelist-orgs-as-admins: true
          cancel-builds-on-update: true
          status-context: skydive-selenium-tests
          black-list-labels:
            - WIP
    builders:
      - shell: |
          #!/bin/bash
          cd src/github.com/skydive-project/skydive
          [ -d /tmp/netcleanup ] || sudo scripts/ci/cleanup.sh init
          sudo scripts/ci/cleanup.sh snapshot
          sudo scripts/ci/cleanup.sh cleanup
          SHELL=dumb scripts/ci/run-selenium-tests.sh
    wrappers:
      - github-pull-request:
          status-url: http://ci-logs.skydive.network/skydive-selenium-tests/builds/${BUILD_NUMBER}/log.html
          status-context: skydive-selenium-tests
    publishers:
      - chuck-norris
      - archive:
          artifacts: 'src/github.com/skydive-project/skydive/tests/postmortem.png'
          allow-empty: 'true'

- job:
    name: skydive-cdd-overview-tests
    defaults: skydive
    concurrent: true
    properties:
      - github:
          url: https://github.com/skydive-project/skydive
    triggers:
      - github-pull-request:
          org-list:
            - skydive-project
          trigger-phrase: '.*(re)?run cdd-overview.*'
          github-hooks: true
          allow-whitelist-orgs-as-admins: true
          cancel-builds-on-update: true
          only-trigger-phrase: true
          status-context: skydive-cdd-overview-tests
          black-list-labels:
            - WIP
    builders:
      - shell: |
          #!/bin/bash
          cd src/github.com/skydive-project/skydive
          [ -d /tmp/netcleanup ] || sudo scripts/ci/cleanup.sh init
          sudo scripts/ci/cleanup.sh snapshot
          sudo scripts/ci/cleanup.sh cleanup
          SHELL=dumb scripts/ci/run-cdd-overview-tests.sh
    wrappers:
      - github-pull-request:
          status-url: http://ci-logs.skydive.network/skydive-cdd-overview-tests/builds/${BUILD_NUMBER}/log.html
          status-context: skydive-cdd-overview-tests
    publishers:
      - chuck-norris
      - archive:
          artifacts: 'src/github.com/skydive-project/skydive/tests/postmortem.png'
          allow-empty: 'true'
      - archive:
          artifacts: 'src/github.com/skydive-project/skydive/tests/overview.mp4'
          allow-empty: 'true'
      - archive:
          artifacts: 'src/github.com/skydive-project/skydive/tests/overview.gif'
          allow-empty: 'true'

- job:
    name: skydive-release
    properties:
      - github:
          url: https://github.com/skydive-project/skydive
    parameters:
      - string:
          name: REF
          description: The tag or branch to build
    scm:
      - git:
          url: https://github.com/skydive-project/skydive
          browser: githubweb
          browser-url: http://github.com/skydive-project/skydive
          timeout: 20
          basedir: src/github.com/skydive-project/skydive
          per-build-tag: false
          skip-tag: true
          refspec: +refs/tags/*:refs/remotes/origin/tags/*
          branches:
            - "${REF}"
    wrappers:
      - github-credentials
      - docker-credentials
      - copr-credentials
    builders:
      - shell: cd src/github.com/skydive-project/skydive && SHELL=dumb scripts/ci/create-release.sh
    publishers:
      - chuck-norris

- job:
    name: skydive-create-binaries
    properties:
      - github:
          url: https://github.com/skydive-project/skydive
    node: slaves
    triggers:
      - github
    scm:
      - git:
          url: https://github.com/skydive-project/skydive
          browser: githubweb
          browser-url: http://github.com/skydive-project/skydive
          timeout: 20
          basedir: src/github.com/skydive-project/skydive
          per-build-tag: false
          skip-tag: true
          branches:
            - master
    wrappers:
      - github-credentials
      - docker-credentials
    builders:
      - shell: cd src/github.com/skydive-project/skydive && SHELL=dumb scripts/ci/create-binaries.sh
    publishers:
      - chuck-norris

- job:
    name: skydive-devstack-tests
    defaults: skydive
    properties:
      - github:
          url: https://github.com/skydive-project/skydive
    triggers:
      - github-pull-request:
          org-list:
            - skydive-project
          trigger-phrase: '.*(re)?run (skydive-)?devstack-tests.*'
          only-trigger-phrase: true
          github-hooks: true
          allow-whitelist-orgs-as-admins: true
          cancel-builds-on-update: true
          status-context: skydive-devstack-tests
          black-list-labels:
            - WIP
    builders:
      - shell: |
          #!/bin/bash
          cd src/github.com/skydive-project/skydive
          [ -d /tmp/netcleanup ] || sudo scripts/ci/cleanup.sh init
          sudo scripts/ci/cleanup.sh snapshot
          sudo scripts/ci/cleanup.sh cleanup
          cd scripts/ci/devstack
          vagrant up --no-provision --provider=openstack && vagrant provision
          retcode=$?
          vagrant destroy
          exit $retcode
    wrappers:
      - github-pull-request:
          status-url: http://ci-logs.skydive.network/skydive-devstack-tests/builds/${BUILD_NUMBER}/log.html
          status-context: skydive-devstack-tests
      - openstack-credentials
    publishers:
      - chuck-norris
    node: vagrant

- job:
    name: skydive-kolla-tests
    defaults: skydive
    properties:
      - github:
          url: https://github.com/skydive-project/skydive
    triggers:
      - github-pull-request:
          org-list:
            - skydive-project
          trigger-phrase: '.*(re)?run (skydive-)?kolla-tests.*'
          only-trigger-phrase: true
          github-hooks: true
          allow-whitelist-orgs-as-admins: true
          cancel-builds-on-update: true
          status-context: skydive-kolla-tests
          black-list-labels:
            - WIP
    builders:
      - shell: |
          #!/bin/bash
          cd src/github.com/skydive-project/skydive
          [ -d /tmp/netcleanup ] || sudo scripts/ci/cleanup.sh init
          sudo scripts/ci/cleanup.sh snapshot
          sudo scripts/ci/cleanup.sh cleanup
          . scripts/ci/install-go.sh
          make static
          cp $GOPATH/bin/skydive .
          make test.functionals.compile GOFLAGS="-race" GORACE="history_size=5" WITH_NEUTRON=true VERBOSE=true
          cd scripts/ci/kolla
          DEPLOYMENT_MODE=dev vagrant up --provider=openstack
          retcode=$?
          vagrant destroy
          exit $retcode
    wrappers:
      - github-pull-request:
          status-url: http://ci-logs.skydive.network/skydive-kolla-tests/builds/${BUILD_NUMBER}/log.html
          status-context: skydive-kolla-tests
      - openstack-credentials
    publishers:
      - chuck-norris
    node: vagrant

- job:
    name: skydive-vagrant-tests
    defaults: skydive
    properties:
      - github:
          url: https://github.com/skydive-project/skydive
    triggers:
      - github-pull-request:
          org-list:
            - skydive-project
          trigger-phrase: '.*(re)?run (skydive-)?vagrant-tests.*'
          only-trigger-phrase: true
          github-hooks: true
          allow-whitelist-orgs-as-admins: true
          cancel-builds-on-update: false
          status-context: skydive-vagrant-tests
          black-list-labels:
            - WIP
    builders:
      - shell: |
          #!/bin/bash
          cd src/github.com/skydive-project/skydive
          VAGRANT_DEFAULT_PROVIDER=openstack scripts/ci/run-vagrant-tests.sh
    wrappers:
      - github-pull-request:
          status-url: http://ci-logs.skydive.network/skydive-vagrant-tests/builds/${BUILD_NUMBER}/log.html
          status-context: skydive-vagrant-tests
      - openstack-credentials
    publishers:
      - chuck-norris
    node: vagrant

- job:
    name: skydive-packaging-tests
    defaults: skydive
    properties:
      - github:
          url: https://github.com/skydive-project/skydive
    triggers:
      - github-pull-request:
          org-list:
            - skydive-project
          trigger-phrase: '.*(re)?run (skydive-)?packaging-tests.*'
          only-trigger-phrase: true
          github-hooks: true
          allow-whitelist-orgs-as-admins: true
          cancel-builds-on-update: true
          status-context: skydive-packaging-tests
          black-list-labels:
            - WIP
    builders:
      - shell: cd src/github.com/skydive-project/skydive && SHELL=dumb scripts/ci/run-packaging-tests.sh
    wrappers:
      - github-pull-request:
          status-url: http://ci-logs.skydive.network/skydive-packaging-tests/builds/${BUILD_NUMBER}/log.html
          status-context: skydive-packaging-tests
    publishers:
      - chuck-norris

- job:
    name: skydive-python-tests
    defaults: skydive
    properties:
      - github:
          url: https://github.com/skydive-project/skydive
    triggers:
      - github-pull-request:
          org-list:
            - skydive-project
          trigger-phrase: '.*(re)?run (skydive-)?python-tests.*'
          only-trigger-phrase: true
          github-hooks: true
          allow-whitelist-orgs-as-admins: true
          cancel-builds-on-update: true
          status-context: skydive-python-tests
          black-list-labels:
            - WIP
    builders:
      - shell: |
          #!/bin/bash
          cd src/github.com/skydive-project/skydive
          [ -d /tmp/netcleanup ] || sudo scripts/ci/cleanup.sh init
          sudo scripts/ci/cleanup.sh snapshot
          sudo scripts/ci/cleanup.sh cleanup
          SHELL=dumb scripts/ci/run-python-tests.sh
    wrappers:
      - github-pull-request:
          status-url: http://ci-logs.skydive.network/skydive-python-tests/builds/${BUILD_NUMBER}/log.html
          status-context: skydive-python-tests
    publishers:
      - chuck-norris

- job:
    name: skydive-coverage
    defaults: skydive
    concurrent: true
    properties:
      - github:
          url: https://github.com/skydive-project/skydive
    scm:
      - skydive-github
    triggers:
      - github-pull-request:
          org-list:
            - skydive-project
          trigger-phrase: '.*(re)?run (skydive-)?coverage.*'
          only-trigger-phrase: true
          github-hooks: true
          allow-whitelist-orgs-as-admins: true
          cancel-builds-on-update: true
          status-context: skydive-coverage
          black-list-labels:
            - WIP
    builders:
      - shell: |
          #!/bin/bash
          cd src/github.com/skydive-project/skydive
          ./scripts/ci/run-coverage.sh
    wrappers:
      - coverage-credentials
      - github-pull-request:
          status-url: http://ci-logs.skydive.network/skydive-coverage/builds/${BUILD_NUMBER}/log.html
          status-context: skydive-coverage
    publishers:
      - publish-cobertura
      - chuck-norris
